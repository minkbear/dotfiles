#!/bin/bash

# Install rosetta
echo 'Install rosetta and xcode tools'
/usr/sbin/softwareupdate --install-rosetta --agree-to-license
xcode-select â€”install

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Add global gitignore
rm $HOME/.global-gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink ssh config
rm $HOME/.ssh/config
ln -s $HOME/.dotfiles/shell/.ssh/config $HOME/.ssh/config

# Symlink vim prefs
rm $HOME/.vimrc
ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc
rm $HOME/.vim
ln -s $HOME/.dotfiles/shell/.vim $HOME/.vim

# Symlink the Mackup config
ln -s $HOME/.dotfiles/macos/.mackup.cfg $HOME/.mackup.cfg

# Activate z
cd ~/.dotfiles/shell
chmod +x z.sh

sudo mkdir -p /usr/local/bin
sudo chown "${DEFAULT_USER}:admin" /usr/local/bin

echo 'Install homebrew'
echo '----------------'
echo install homebrew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >>$HOME/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"

echo 'Install Starship'
echo '----------------'
brew install starship
rm $HOME/.config/starship.toml
ln -s $HOME/.dotfiles/shell/.config/starship.toml $HOME/.config/starship.toml

echo 'Install NVM'
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

echo 'Install node'
echo '------------'
nvm install --lts
nvm use --lts

echo 'Install pkg-config'
echo '------------------'
brew install pkg-config

echo 'Install wget'
echo '------------'
brew install wget

echo 'Install httpie'
echo '--------------'
brew install httpie

echo 'Install ncdu'
echo '------------'
brew install ncdu

echo 'Install hub'
echo '-----------'
brew install hub

echo 'Install ack'
echo '-----------'
brew install ack

echo 'Install wrk'
echo '-----------'
brew install wrk

echo 'Install doctl'
echo '-------------'
brew install doctl

echo 'Install mas'
echo '-------------'
brew install mas

echo 'Install image converters'
echo '-------------'
brew install jpegoptim optipng pngquant svgo gifsicle webp cairo pango libpng jpeg giflib librsvg

# echo 'Install some nice quicklook plugins'
# echo '-----------------------------------'
# brew install --cask --force qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzip WebPQuickLook suspicious-package

echo 'Install php'
echo '-----------'
brew install php

export PATH="/opt/homebrew/opt/php/bin:$PATH"
export PATH="/opt/homebrew/opt/php/sbin:$PATH"

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]; then
    echo >&2 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
sudo mv composer.phar /usr/local/bin/composer

echo 'Set right composer path'
export PATH="$HOME/.composer/vendor/bin:$PATH"

ln -s $HOME/.dotfiles/misc/php-limits.ini /opt/homebrew/etc/php/8.3/conf.d/php-z-custom-limits.ini

echo 'Install Deployer 7'
echo '--------------'
curl -LO https://github.com/deployphp/deployer/releases/download/v7.5.5/deployer.phar
sudo mv deployer.phar /usr/local/bin/dep7
chmod +x /usr/local/bin/dep7

echo 'Install Deployer 6'
echo '--------------'
curl -LO https://deployer.org/deployer.phar
sudo mv deployer.phar /usr/local/bin/dep
chmod +x /usr/local/bin/dep

echo 'Install mackup'
echo '--------------'
brew install mackup

echo 'Install watchman'
echo '--------------'
brew install watchman

echo 'Install kubernetes cli'
echo '--------------'
brew install kubectx
brew install asdf
asdf install kubectl latest
brew install helm

# Docker
brew install docker
brew install docker-buildx
brew install bash-completion
brew install docker-completion
brew install docker-compose-completion
brew install docker-machine-completion

# AWS command line
brew install awscli # Official command line

echo 'Install zsh plugins: autosuggestions, autojump'
echo '---------------------------'
brew install zsh-autosuggestions autojump

# echo 'Install Google Fonts'
# echo '--------------'
# cd ~/Library/Fonts/ && git clone https://github.com/google/fonts.git google-fonts && cd -

echo 'Install PHPCS'
echo '--------------'
brew install php-code-sniffer
phpcs --config-set installed_paths ~/.dotfiles/phpcs

echo 'Init Git'
git config --global init.defaultBranch main
git config --global push.default current

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. Make sure dropbox is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
echo '2. Set some sensible os x defaults by running: $HOME/.dotfiles/macos/set-defaults.sh'
echo '3. Install some helpful apps by running: $HOME/.dotfiles/macos/apps.sh'
echo '4. Make a .dotfiles-custom/shell/.aliases for your personal commands'
echo '5. Office 365, Cloudya, 1Password, TermHere, ImageOptim and Sonos can not be installed automatically. Please do to manually if you want to.'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
